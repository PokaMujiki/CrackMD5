plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'ru.nsu.ccfit'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

configurations {
    jaxb
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'com.github.dpaukov:combinatoricslib3:3.3.3'
    implementation 'wsdl4j:wsdl4j'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    jaxb(
            "org.glassfish.jaxb:jaxb-xjc",
            "jakarta.xml.bind:jakarta.xml.bind-api",
            "org.glassfish.jaxb:jaxb-runtime",
    )
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    implementation 'org.apache.logging.log4j:log4j-core:2.16.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.16.0'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'build/generated-sources/jaxb'
        }
    }
}

task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.xsdsDir = "src/main/resources/"
    outputs.dir sourcesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask", classpath: configurations.jaxb.asPath
            println(configurations.jaxb.asPath)
            mkdir(dir: sourcesDir)
            xjc(destdir: sourcesDir) {
                arg(value: "-wsdl")
                schema(dir: xsdsDir, includes: "*.xsd")
                produces(dir: sourcesDir, includes: "**/*.java")
            }
        }
    }
}

compileJava.dependsOn genJaxb
